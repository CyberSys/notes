Chapter 1
====================

1.3.1 空白距离
--------------------

空格和制表符等空白字符在LATEX 中被看作相同的空白距离(space)。多个连续
的空白字符等同于一个空白字符。在句首的空白距离一般会被忽略，单个空行也
被认为是一个“空白距离”。

两行文本间的空白行标志着上段的结束和下段的开始。多个空白行的作用
等同于一个空白行

1.3.2 特殊字符
--------------------

特殊字符包括： # $ % ^ & _ { } \

在这些特殊字符前加上转义字符 \， 它们就可以正常的输出到文档.
然而, \ 本身并不能通过 \\ 得到，因为 \\ 表示的是一个换行命令。


1.3.3 命令
--------------------

LATEX 命令(commands) 是大小写敏感的，有以下两种格式：
    -   以一个反斜线(backslash) \ 开始，命令名只由字母组成。
    -   由一个反斜线和非字母的字符组成

LATEX 忽略命令之后的空白字符。如果你希望在命令后得到一个空格，可以
在命令后加上{} 和一个空格，或加上一个特殊的空格命令。{} 将阻止LATEX 吃
掉命令后的所有空格。

有些命令需要一个参数(parameter)，该参数用花括号(curly braces) { } 括
住并写在命令的后面。一些命令支持可选参数(optional parameters)，可选参数
可用方括号(square brackets) [ ] 括住，然后写在命令的后面.

1.3.4 注释
--------------------
如果遇到一个百分号%，LATEX 将忽略% 后的该行内容，换行符以及下一行前的空白字符。

符号% 也可以用来断开不能含有空白字符或换行符的较长输入内容

如果注释的内容较长，你可以使用 verbatim 宏包提供的comment 环境。当
然，在使用该环境前，你要在文档的导言区（后面将会解释其含义）加上命
令\usepackage{verbatim}。

1.4 源文件结构
--------------------

当LATEX 处理源文件时，它希望源文件遵从一定的结构(structure)。因此，每
个源文件都要以如下命令开始 ::
    \documentclass{...}

这条命令指明了你所写的源文档的类型。

你可以加入控制整篇文档样式的命令，或者载入一些为LATEX 增加新特性的宏包(package) ::

    \usepackage{...}

当完成所有的设置工作后，你可以用下面的命令开始文档的主体 ::

    \begin{document}

现在你就可以输入带有LATEX 命令的正文了。在文章末尾使用命令 ::

    \end{document}

来告诉LATEX 文档已经结束。LATEX 会忽略此命令后的所有内容。

在 `\documentclass` 和 `\begin{document}` 之间的部分称作导言区(preamble)

1.5 命令行过程
--------------------

让LATEX 编译你的源文件 ::

    $ latex foo.tex
    $ xdvi foo.dvi
    $ dvips -Pcmz foo.dvi -o foo.ps
    $ dvipdf foo.dvi

1.6 文档布局
--------------------

文档类型可由 `\documentclass` 命令来指定 ::
    \documentclass[options]{class}

可使用如下命令调用宏包::
    \usepackage[options]{package}

现代的TEX发行版包含了大量免费的宏包。如果你使用的是Unix 系统，可
以使用命令 `texdoc` 搜索宏包的说明文档。

LATEX 支持三种预定义的页眉/页脚(header/footer) 样式，称为页面样式(page
style)。如下命令 ::
    \pagestyle{style}

1.7 各类LATEX 文件
--------------------

.tex    源文件

.cls    定义文档外观形式的类文件，可通过 `\documentclass` 命令选取。

.sty    宏包文件

.dtx    文档化TEX 文件。这是LATEX 宏包文件的主要发布格式。如果编译.dtx 文
        档，将会得到其中包含的LATEX 宏包文件的文档化宏代码。

.ins    对应.dtx 文件的安装文件。如果你从网上下载了一个LATEX 的宏包文件，
        其中一般会包含一个.dtx 文件和一个.ins 文件。使用LATEX 处理.ins 文
        件可以解开.dtx 文件。

.fd     字体描述文件

.dvi    设备无关文件。这是运行LATEX 编译的主要结果。

.toc    储存了所有的章节标题

.aux    用来向下次编译传递信息的辅助文件。主要储存交叉引用的相关信息

.idx    如果文档中包含索引，LATEX 将使用该文件存储所有的索引词条。此文件
        需要使用makeindex 处理

1.8 大型项目
--------------------

当处理大型文档时，最好将文档分割成为几部分。LATEX 有两个命令可以帮助你
完成这项工作。

`\include{filename}` 将名为filename.tex 的文档内容插入到当前文档中。需要注意
的是，在处理插入的filename.tex 文档前，LATEX会 **另起一页**  。

\include 命令会在新的一页上排版载入的文本。有些时候可能不希望在新的一页上
排版载入的文本，这时可以使用命令 `\input{filename}`

如果想让LATEX 快速的检查文档中的错误，可以使用syntonly 宏包。它可以
使LATEX 浏览整个文档，检查语法错误和使用的命令，但并不生成DVI 输出。
在这种模式下，LATEX 运行速度很快，可以为你节省宝贵的时间。syntonly 宏包
的使用非常简单 ::
    \usepackage{syntonly}
    \syntaxonly

2.1 文本和语言结构
--------------------

LATEX 不同于其它排版系统之处在于，你必须告诉它文本的逻辑和语义结
构。然后它根据类文件和各种样式文件中给定的“规则”生成相应格式的文本。

LATEX 最重要的文本单元（印刷术上的）是段落(paragraph)。我们称段落
为“文本单元”，因为段落是连续思想或者观点在排版上的反映

一旦开始表达新的思想，就应该另起一段，否则换行就够了。

大部分人完全低估了恰当分段的重要性。许多人甚至不知道分段表示什么。

另一个更小的文本单元是句子。在英文文本中，结束句子的句点后面的空格
比缩略词的句点后面的空格更长。LATEX 试图判断你需要哪一个，如果LATEX 判
断错了，你必须告诉它你需要什么。

2.2 断行和分页
--------------------

通常书籍是用等长的行来排版的。为了优化整个段落的内容，LATEX 在单词之间
插入必要的断行点(line break) 和间隙。如果一行的单词排不下，LATEX 也会进
行必要的断词。

段落如何排版依赖于文档类别。通常，每段的第一行有 **缩进** , 两段之间没有
额外的间隔。

LATEX 断行 ::
\\ or \newline

另起一行，而不另起一段 ::
\\*

强制断行后，还禁止分页 ::
\newpage

另起一页::
\linebreak[n], \nolinebreak[n], \pagebreak[n], \nopagebreak[n]


LATEX 总是尽可能产生最好的断行效果。如果断行无法达到LATEX 的高标
准，就让这一行在段落的右侧溢出。然后在处理源文件的同时，报告溢出的消
息(“overfull hbox”)

你可以使用 `\sloppy` 命令，告诉LATEX 降低一点儿标准。它通过增加单词之间
的间隔，以防止出现过长的行，虽然最终的输出结果不是最优的。在这种情
况下给出警告(“underfull hbox”)。 `\fussy` 命令把LATEX 恢复为缺省状态。


必要时LATEX 就会断词。如果断词算法不能确定正确的断词点，可以使用如下命
令告诉TEX 如何弥补这个缺憾。命令 `\hyphenation{word list}` 使列于参量中
的单词仅在注有“-” 的地方断词

命令 `\-` 在单词中插入一个自主的断词点。它也就成为这个单词中允许出现
的唯一断词点。

命令 `\mbox{word1 word2 word3}` 保证把几个单词排在同一行上。

命令 `\fbox` 和 \mbox 类似，此外它还能围绕内容画一个框。

2.3 内置字符串
--------------------
`\today`
`\TeX`
`\LaTeX`

2.4 特殊字符和符号
--------------------

你不能再像在打字机上那样，把 " 用作引号(quotation marks)。在印刷中有专门
的左引号和右引号。在LATEX 中，用两个`（重音）产生左引号，用两个'（直立引
号）产生右引号。一个`  和一个'  产生一个单引号。

当然我知道这种实现机制不是最理想的，无论字体如何，它总是一个反向的
勾号或者重音符(`) 当左引号，直立引号(') 当右引号。

LATEX 中有四种短划(dash) 标点符号。连续用不同数目的短划，可以得到其中的
三种。第四个实际不是标点符号，它是数学中的减号

这些短划线是: ‘-’ 连字号(hyphen)，‘--’ 短破折号(en-dash)，‘---’ 长破折
号(em-dash) 和‘−’ 减号(minus sign)。

波浪号经常和网址用在一起。它在LATEX 中，可用\~ 产生，或者 $sim$

在导言区载入textcomp 宏包 ::
\usepackage{textcomp}
你就可以使用命令 `\texteuro` 来生成欧元符号。

首先是eurosym 宏包。它提供了官方的欧元符号 \euro ::

    \usepackage[official]{eurosym}
    \euro

在打字机上，逗号(comma) 或句号(period) 占据的空间和其他字母相等。在书
籍印刷中，这些字符仅占据一点儿空间，并且与前一个字母贴得非常紧。所以不
能只键入三个点来输出“省略号”(ellipsis)，因为间隔划分得不对。有一个专门
的命令输出省略号。它被称为::
    \ldots

在两个字母之间插入一个 `\mbox{}` ，可以禁止连字(ligature)。对于由两个词
构成的单词，这可能是必要的。

LATEX 支持来自许多语言中的注音符号(accent) 和特殊字符(special character)。

2.5 国际语言支持
--------------------

所有自动生成的字符串必须适用于新语言。对于许多种语言，这个任务可
由Johannes Braams 编的宏包babel 完成。

如果你有一份多语言文档，其中的编码会有冲突。这时可以使用ucs 宏包来
选择unicode ::
    \usepackage{ucs}
    \usepackage[utf8x]{inputenc}


字体编码是另外一个问题。它定义于一种TEX 字体里每个字母的存放位置。
几种不同的输入编码可以被映射到一种字体编码，这样减少了所需的字体集数
量。字体编码通过fontenc 宏包来处理::
    \usepackage[encoding]{fontenc}

2.6 单词间隔
--------------------

为了使输出的右边界对齐，LATEX 在单词间插入不等的间隔。在句子的末尾插入
的空间稍多一些，因为这使得文本更具可读性。LATEX 假定句子以句号、问号或
惊叹号结尾。如果句号紧跟一个大写字母，它就不视为句子的结尾。因为一般在
有缩写的地方，才出现句号紧跟大写字母的情况。

作者必须详细说明这些假设中的任何一个例外。空格前的反斜线符号产生一
个不能伸长的空格。波浪字符‘ ’ 也产生一个不能伸长的空格，并且禁止断行。
句号前的命令\@ 说明这个句号是句子的末尾，即使它紧跟一个大写字母。

命令 `\frenchspacing` 能禁止在句号后插入额外的空白，它告诉LATEX 在句号后不要插入比正常
字母更多的空白。这在非英语语言中非常普遍。

2.7 标题、章和节
--------------------

为便于读者理解，应该把文档划分为章(chapter)，节(section)和子节。

LATEX 用专门的命令支持这个工作, 你的任务是按正确次序使用它们。

对article 风格的文档，有下列分节命令 ::
    \section{...}
    \subsection{...}
    \subsubsection{...}
    \paragraph{...}
    \subparagraph{...}

如果想把文档分成几个部分而且不影响章节编号，你可以使用 ::
    \part{...}

当你使用report 或者book 类的时候，可以用另外一个高层次的分章命令 ::
    \chapter{...}

因为article 类的文档不划分为章，所以很容易把它作为一章插入书籍中。
节之间的间隔，节的序号和标题的字号由LATEX 自动设置。

LATEX 在文档编译的最后一个循环中，提取节的标题和页码以生成目录。

命令 `\tableofcontents` 在其出现的位置插入目录。为了得到正确的目录(table of contents)
一个新文档必须编译两次, 有时还要编译第三次。如有必要LATEX 会告诉你。

目录出现的标题，一般与输入的文本完全一致。有时这是不可能的，因为标
题太长排不进目录。在这种情况下，目录的条目可由实际标题前的可选参量确
定 ::

\chapter[Title for the table of contents]{A long and especially boring title, shown in the text}

整篇文档的标题(title) 由命令 `\maketitle` 产生。标题的内容必须在调用 \maketitle 以前，由命令
`\title{...}`, `\author{...}` 和可选的 `\date{...}` 定义。

`\appendix` 标志书中附录材料的开始。该命令后的各章序号改用字母标记。

2.8 交叉引用
--------------------

LATEX 提供了如下交叉引用命令::
    \label{marker}, \ref{marker} 和\pageref{marker}

2.9 脚注
--------------------

命令 `\footnote{footnote-text}` 把脚注内容排印于当前页的页脚位置。

脚注命令总是置于其指向的单词或句子的后面。

脚注内容是一个句子或句子的一部分，所以应用逗号或句号结尾。

2.10 强调
--------------------

`\underline{text}` 可以为文本添加下划线，起到强调作用。

`\emph{text}` 则以斜体显示文本，同样起到强调的作用。

2.10 环境
--------------------

为了排版专用的文本，LATEX 定义了各种不同格式的环境(environment) ::
\begin{environment} text \end{environment}

其中environment 是环境的名称。只要保持调用顺序，环境可以 **嵌套** .

`itemize` 环境适用于简单的列表， `enumerate` 环境适用于有排列序号的列表，
而 `description` 环境用于带描述的列表

`flushleft` 和 `flushright` 环境分别产生左对齐(left-aligned) 和右对齐(rightaligned)
的段落。 `center` 环境产生居中的文本

`quote` 环境可以用于引文、语录和例子。

`quotation` 环境用于超过几段的较长引用，因为它对段落进行缩进。

`verse` 环境用于诗歌，在诗歌中断行很重要

`abstract` 环境用于摘要

`verbatim` 环境中的文本将直接打印，包括所有的断行和空白，就像在打字机上键入一样，不执行任何LATEX 命令。

在一个段落中，类似的功能可由 `\verb+text+` 完成。 + 仅是分隔符的一个例子。
除了* 或空格，可以使用任意一个字符作为分隔符。

`tabular` 环境能用来排版带有水平和垂直表线的漂亮表格(table)

2.12 浮动体
--------------------

对于在当前排不下的任何一个图片或表格，其解决办法是把它们“浮动”到
下一页，与此同时当前页面用正文文本填充。LATEX 提供了两个浮动体(floating
bodies) 环境；一个用于图片，一个用于表格。要充分发挥这两个环境的优越性，
应该大致了解LATEX 处理浮动体的内在原理。但是浮动可能成为令人沮丧的主要
原因，因为LATEX 总不把浮动体放在你想要的位置。


包含在 `figure` 环境或 `table` 环境中的任何材料都将被视为浮动内容

2.13 保护脆弱命令
--------------------
当出现在类似\section 的参量中时，一些命令会失效。它们被称为脆弱命令(fragile commands)。
\footnote 或\phantom 是脆弱命令的例子。

把 `\protect` 命令放在它们前面，就能保护它们，继续有效。

4.6 安装额外的宏包
--------------------

各种宏包的源文件，例如geometry，hyphenat 等等，一般来说都包含两个文
件：一个扩展名为.ins，另一个扩展名为.dtx。此外，通常会有一个readme.txt
对宏包进行简要的说明。你应该先阅读这个文件。

无论如何，一旦你得到了宏包的源文件，你还要对它们进行处理使得 :
    -   你的TEX 系统知道这个新的宏包，
    -   生成说明文档。

4.7 使用pdfLATEX
--------------------
一般的TeX 生成DVI，而pdfTEX 生成PDF。还有pdfLATEX程序将LaTeX 源文件生成PDF。
现在大多数的TEX 发行版本都自动集成安装了pdfTEX 和pdfLATEX 。

为了生成PDF 而不是DVI，只需要将命令 `latex file.tex` 改成 `pdflatex file.tex` 。


在LATEX 中，你可以通过 `documentclass` 的参数选项来定义页面的大小，例
如：a4paper 或letterpaper。这些也对pdfLATEX 有效，但是首先要让pdfTEX
知道这种页面的实际大小来控制PDF 文件的页面大小。若你使用 `hyperref` 宏包
页面的大小将自动调整。否则，你需要手动的将下面两行加入到文档的导言区 ::
    \pdfpagewidth=\paperwidth
    \pdfpageheight=\paperheight

LATEX 和pdfLATEX 之间的主要不同有三个方面：采用的字体，包含图像的格式和超链接的手动配置。

hyperref 宏包将你的文档中的所有内部引用变成超链接。为此，一些特殊的设置
是必须的，保证 `\usepackage[pdftex]{hyperref}` 是你的文档导言区的最后一行命令。

4.8 创建演示文稿
--------------------

`beamer 文档类` 使用带参数的宏包graphicx、color 和hyperref 来适应屏幕阅
读的演示文稿。

6.3 间距
--------------------

如果你想在文档中使用更大的行距，你可以在导言中使用如下命令进行设定 ::
    \linespread{factor}


注意\linespread 的效果相当夸张而且不适合出版工作。因此如果你很想
改变行距可能会希望使用如下的命令 ::
    \setlength{\baselineskip}{1.5\baselineskip}


在LATEX 中，有两个参数可以影响段落的布局。在文档的导言部分，可以通过如
下的定义来改变段落的布局 ::
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{1ex plus 0.5ex minus 0.2ex}

这两个命令增加了段落间距，并将首行缩进设置为0。

在欧洲大陆，段落通常用一些空白分隔并且一般首行不缩进。但是值得注意
的是，这也会影响目录。目录的行距也会变得非常疏松。为了避免这种情况，你
可能需要将上面的两个命令从导言中移到文档中\tableofcontents 以下适合的
位置，或者根本不要使用这些，因为一般来说 **专业的书籍都是用缩进** 并且
通常不用空白来分离段落。

如果你想缩进一个本来没有缩进的段落，可以在段落的开始使用命令 ::
    \indent
当然，这个命令只有在\parindent 不为零的情况下才有效果。

为了创建一个不缩进的段落，你可以在段落的开始部分使用命令 ::
    \noindent

确实，相对于你的MS Word 页面来说，LaTeX 的缺省页面布局看上去非常的狭窄。但是看看你
喜欢的书籍并且统计每个标准文本行的字符数目。你会发现每行的字符不超过
66 个。现在你的LATEX 页面也正是如此。 经验显示，如果在一行中塞入更多的
字符，阅读将变得困难。这是因为眼睛从行的开始移动到行的结束变得困难了。
这也是报纸为何要排版成多栏形式的原因。







